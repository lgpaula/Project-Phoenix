# Imported PIL Library 
from PIL import Image

# Open an Image
def open_image(path):
    newImage = Image.open(path)
    return newImage

# Save Image
def save_image(image, path):
    image.save(path, 'png')


# Create a new image with the given size
def create_image(i, j):
    image = Image.new("RGB", (i, j), "white")
    return image


# Get the pixel from the given image
def get_pixel(image, i, j):
  # Inside image bounds?
    width, height = image.size
    if i > width or j > height:
        return None

  # Get Pixel
    pixel = image.getpixel((i, j))
    return pixel

# Create a B/W version of the image
def convert_primary(image):
  # Get size
    width, height = image.size

  # Create new Image and a Pixel Map
    new = create_image(width, height)
    pixels = new.load()

  # Transform to primary
    for i in range(width):
        for j in range(height):
      # Get Pixel
            pixel = get_pixel(image, i, j)

      # Get R, G, B values (This are int from 0 to 255)
            red =   pixel[0]
            green = pixel[1]
            blue =  pixel[2]

      # Transform to primary
            if red > 220 and green > 220 and blue > 220:
                red = 255
                blue = 255
                green = 255
            else:
                red = 0
                blue = 0
                green =0
                
                
      # Set Pixel in new image
            pixels[i, j] = (int(red), int(green), int(blue))

  # Return new image
    return new

# Main
if __name__ == "__main__":
  # Load Image (JPEG/JPG needs libjpeg to load)
    original = open_image('picture.jpg')

  # Convert to Primary and save
    new = convert_primary(original)
    save_image(new, '255-0.jpg')
